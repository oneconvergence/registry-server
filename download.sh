#!/bin/bash
list=""
images=""

usage () {
    echo "USAGE: $0 --image-list images.txt --output [images.tar or /path/to/images/directory]"
    echo "  [-l|--image-list path] text file with list of images; one image per line."
    echo "  [-i|--output path] Output tar file to be generated by docker save or folder path where images are to be stored."
    echo "  [-h|--help] Usage message"
}

POSITIONAL=()
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        -i|--output)
        images="$2"
        shift # past argument
        shift # past value
        ;;
        -l|--image-list)
        list="$2"
        shift # past argument
        shift # past value
        ;;
        -h|--help)
        help="true"
        shift
        ;;
        *)
        usage
        exit 1
        ;;
    esac
done
if [[ -z $list ]]; then
        echo "Required: --image-list."
        usage
        exit 1
fi
if [[ -z $images ]]; then
        echo "Required: --output."
        usage
        exit 1
fi
if [[ $help ]]; then
    usage
    exit 0
fi

all_in_one=false
if [[ $images == *.tar ]]; then
    all_in_one=true 
elif [[ $images == *.tar.gz ]]; then
    echo "Error: $images file is invalid. Gzip compression not supported. Check --help for usage." 
    exit 1
elif [ ! -d $images ]; then
    if [ -f $images ]; then
        echo "Error: Path $images already exists and is a file, not a directory. Check --help for usage."
	exit 1
    else
        echo "Path $images doesn't exist. Creating new directory..."
	mkdir -p $images
    fi
fi

pulled=""
while IFS= read -r i; do
    [ -z "${i}" ] && continue
    if sudo docker pull "${i}"; then
        echo "Image pull success: ${i}"
        pulled="${pulled} ${i}"
        if [ "$all_in_one" = false ]; then
            i_without_registry=${i#*/}
            i_tarfile=$(echo "$i_without_registry" | tr /: -).tar
            echo "Saving $i to $images/$i_tarfile"
            sudo docker save -o $images/$i_tarfile $i
            sudo docker rmi $i
        fi     
    else
        if sudo docker inspect "${i}" > /dev/null 2>&1; then
            pulled="${pulled} ${i}"		
        else
            echo "Image pull failed: ${i}"
        fi
    fi
done < "${list}"

if $all_in_one; then
    echo "Creating ${images} with $(echo ${pulled} | wc -w | tr -d '[:space:]') images"
    sudo docker save $(echo ${pulled})  > ${images}
fi
